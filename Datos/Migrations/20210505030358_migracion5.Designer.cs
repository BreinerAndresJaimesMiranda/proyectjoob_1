// <auto-generated />
using System;
using Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(ProyectjoobContext))]
    [Migration("20210505030358_migracion5")]
    partial class migracion5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entity.Aspirante", b =>
                {
                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Departamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioTrabajoPreferido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nacionalidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalarioTrabajoPreferido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Correo");

                    b.ToTable("Aspirantes");
                });

            modelBuilder.Entity("Entity.DatoAcademico", b =>
                {
                    b.Property<int>("DatoAcademicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EstadoCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("HojaDeVidaId")
                        .HasColumnType("int");

                    b.Property<string>("NivelEducativo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCentroAcademico")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatoAcademicoId");

                    b.HasIndex("HojaDeVidaId");

                    b.ToTable("DatosAcademicos");
                });

            modelBuilder.Entity("Entity.DatoLaboral", b =>
                {
                    b.Property<int>("DatoLaboralId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("HojaDeVidaId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DatoLaboralId");

                    b.HasIndex("HojaDeVidaId");

                    b.ToTable("DatosLaborales");
                });

            modelBuilder.Entity("Entity.HojaDeVida", b =>
                {
                    b.Property<int>("HojaDeVidaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspiranteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DescripcionPerfilLaboral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HojaDeVidaId");

                    b.HasIndex("AspiranteId");

                    b.ToTable("HojasDeVida");
                });

            modelBuilder.Entity("Entity.DatoAcademico", b =>
                {
                    b.HasOne("Entity.HojaDeVida", "HojaDeVida")
                        .WithMany("DatosAcademicos")
                        .HasForeignKey("HojaDeVidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HojaDeVida");
                });

            modelBuilder.Entity("Entity.DatoLaboral", b =>
                {
                    b.HasOne("Entity.HojaDeVida", "HojaDeVida")
                        .WithMany("DatosLaborales")
                        .HasForeignKey("HojaDeVidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HojaDeVida");
                });

            modelBuilder.Entity("Entity.HojaDeVida", b =>
                {
                    b.HasOne("Entity.Aspirante", "Aspirante")
                        .WithMany()
                        .HasForeignKey("AspiranteId");

                    b.Navigation("Aspirante");
                });

            modelBuilder.Entity("Entity.HojaDeVida", b =>
                {
                    b.Navigation("DatosAcademicos");

                    b.Navigation("DatosLaborales");
                });
#pragma warning restore 612, 618
        }
    }
}
